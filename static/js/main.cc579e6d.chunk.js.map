{"version":3,"sources":["modules/ship.js","modules/gameboard.js","components/PlayGame.js","components/Interface.js","App.js","index.js"],"names":["ship","isSunk","name","Hits","length","Length","Destroyed","createShip","hit","playerShips","computerShips","setPlayerShips","setComputerShips","computerBoard","setComputerBoard","playerBoard","setPlayerBoard","checkWin","setPlayerTurn","newLocation","hitShip","shipTeam","startsWith","patrolboat","submarine","destroyer","battleship","carrier","push","location","slice","parseInt","splice","gameboardFactory","createShips","createGameboard","i","receiveAttack","player","gameboard","setGameboard","Number","isInteger","PlayGame","props","computerStateArr","playerStateArr","placeShips","arrName","computerArr","randomNum","Math","floor","random","every","value","computerFunc","playerArr","playerFunc","useEffect","Interface","computerTileArr","forEach","element","className","onClick","logic","datatype","includes","playerTileArr","App","computerDestroyedArr","playerDestroyedArr","useState","computerDestroyedState","setComputerDestroyedState","playerDestroyedState","setPlayerDestroyedState","resetGame","window","reload","computerWinArr","playerWinArr","alert","setPlayBoard","input","target","attributes","classList","contains","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc579e6d.chunk.js","sourcesContent":["const ship = () => {\n\n    const createShip = (length) => {\n    const ship = {\n        Length: length,\n        Hits: [],\n        Destroyed: false,\n    }\n    return ship;\n}\n    // Registers a hit, updates the relevant ship object's hit key.\n    const hit = (name, playerShips, computerShips, setPlayerShips, setComputerShips, computerBoard, setComputerBoard, playerBoard, setPlayerBoard, checkWin, setPlayerTurn) => {\n        let hitShip = '';\n        let shipTeam = '';\n\n        if (name.startsWith('C')) {\n            shipTeam = {...computerShips}\n            if (name.startsWith('CP')) hitShip = computerShips.patrolboat;\n            if (name.startsWith('CS')) hitShip = computerShips.submarine;\n            if (name.startsWith('CD')) hitShip = computerShips.destroyer;\n            if (name.startsWith('CB')) hitShip = computerShips.battleship;\n            if (name.startsWith('CC')) hitShip = computerShips.carrier;\n        } \n        if (name.startsWith('P')) {\n            shipTeam = {...playerShips}\n            if (name.startsWith('PP')) hitShip = playerShips.patrolboat;\n            if (name.startsWith('PS')) hitShip = playerShips.submarine;\n            if (name.startsWith('PD')) hitShip = playerShips.destroyer;\n            if (name.startsWith('PB')) hitShip = playerShips.battleship;\n            if (name.startsWith('PC')) hitShip = playerShips.carrier;\n        }\n        hitShip.Hits.push('Hit')\n        if (name.startsWith('C')) { setComputerShips(shipTeam) }\n        if (name.startsWith('P')) { setPlayerShips(shipTeam) }\n\n        let newLocation;\n\n        if(name.length === 4) {\n            let location = name.slice(-2)\n            newLocation = parseInt(location)\n        } else {\n            let location = name.slice(-1)\n            newLocation = parseInt(location)\n        }\n\n        if (name.startsWith('C')) { \n            computerBoard.splice(newLocation, 1, 'X');\n            const newArr = [...computerBoard]\n            setComputerBoard(newArr);\n        }\n\n        if (name.startsWith('P')) {\n            playerBoard.splice(newLocation, 1, 'X');\n            const newArr = [...playerBoard]\n            setPlayerBoard(newArr);\n        }\n        \n        isSunk(hitShip);\n        checkWin()\n    }\n\n    // Checks if all the spaces have been hit on a ship and then sets the object key destroyed to true.\n    const isSunk = (name) => {\n        if (name.Hits.length >= name.Length) name.Destroyed = true;\n    }\n    \n    return { createShip, hit, isSunk }\n};\n\nexport default ship;","/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nimport PlayGame from '../components/PlayGame';\nimport ship from '../modules/ship';\n\n// Represents an array for the board (We do need one for each player, don't forget)\nconst gameboardFactory = () => {\n    const createGameboard = (name) => {\n        for (let i = 0; i < 100; i++) {\n            name.push(i)\n        }\n        return name;\n    }\n    // Creates 5 ship objects and then assigns it to one object.\n    const createShips = () => {\n        const patrolboat = ship().createShip(2)\n        const submarine = ship().createShip(3)\n        const destroyer = ship().createShip(3)\n        const battleship = ship().createShip(4)\n        const carrier = ship().createShip(5)\n        \n        return {\n            patrolboat: patrolboat,\n            submarine: submarine, \n            destroyer: destroyer,\n            battleship: battleship,\n            carrier: carrier\n        }\n    }\n    // Receives an attack and then plots the coordinates, and if a ship gets hit, it then registers that and runs hit().\n    const receiveAttack = (location, player, gameboard, setGameboard) => {\n        if (Number.isInteger(location)) { \n            gameboard.splice(location, 1, player);\n            const newArr = [...gameboard]\n            setGameboard(newArr);\n        }\n        return gameboard;\n    }\n\n    return { gameboardFactory, createShips, createGameboard, receiveAttack }\n}\n\nexport default gameboardFactory;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-expressions */\nimport React, { useEffect, useState } from 'react'\nimport gameboardFactory from '../modules/gameboard';\n\nconst PlayGame = (props) => {\n    let computerStateArr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\n        37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\n        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n        71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,\n        88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99];\n\n         let playerStateArr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\n        37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\n        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,\n        71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87,\n         88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99];\n\n    const placeShips = (arrName, ship, location, name) => {\n        let newLocation = location;\n        for (let i = newLocation; i < location + ship.Length; ++i) {\n            arrName.splice(i, 1, name + i)\n        }\n    }\n\n    const computerFunc = () => {\n        let computerArr = [];\n        for (let i = 0; i < 5; ++i) {\n            let randomNum = Math.floor(Math.random() * 95);\n            let overflow = Math.floor((randomNum / 1) % 10);\n            let numTest = (value) => value < randomNum - 5 || value > randomNum + 5;\n            if (overflow > 5) {--i}\n            else if (!computerArr) computerArr.push(randomNum);\n            else if (computerArr.every(numTest)) computerArr.push(randomNum);\n            else {--i}\n        }\n        placeShips(computerStateArr, props.computerShips.patrolboat, computerArr[0], 'CP');\n        placeShips(computerStateArr, props.computerShips.submarine, computerArr[1], 'CS');\n        placeShips(computerStateArr, props.computerShips.destroyer, computerArr[2], 'CD');\n        placeShips(computerStateArr, props.computerShips.battleship, computerArr[3], 'CB');\n        placeShips(computerStateArr, props.computerShips.carrier, computerArr[4], 'CC');\n    }\n    computerFunc()\n\n    const playerFunc = () => {\n        let playerArr = [];\n        for (let i = 0; i < 5; ++i) {\n            let randomNum = Math.floor(Math.random() * 95);\n            let overflow = Math.floor((randomNum / 1) % 10);\n            let numTest = (value) => value < randomNum - 5 || value > randomNum + 5;\n            if (overflow > 5) {--i}\n            else if (!playerArr) playerArr.push(randomNum);\n            else if (playerArr.every(numTest)) playerArr.push(randomNum);\n            else {--i}\n        }\n        placeShips(playerStateArr, props.playerShips.patrolboat, playerArr[0], 'PP');\n        placeShips(playerStateArr, props.playerShips.submarine, playerArr[1], 'PS');\n        placeShips(playerStateArr, props.playerShips.destroyer, playerArr[2], 'PD');\n        placeShips(playerStateArr, props.playerShips.battleship, playerArr[3], 'PB');\n        placeShips(playerStateArr, props.playerShips.carrier, playerArr[4], 'PC');\n    } \n    playerFunc()\n\n    useEffect(() => {\n        props.setComputerBoard(computerStateArr);\n        props.setPlayerBoard(playerStateArr)\n    }, [PlayGame])\n\n    return(\n        null\n    )\n}\n\nexport default PlayGame;\n\n\n\n","import React from 'react';\n\nconst Interface = (props) => {\n    let computerTileArr = [];\n    props.computerBoard.forEach(element => {\n        if (Number.isInteger(element)) computerTileArr.push(<div className=\"computerTile\" onClick={props.logic} datatype={element}></div>)\n        else if (element.startsWith('C') && !element.includes('H')) computerTileArr.push(<div className=\"computerShipTile\" onClick={props.logic} datatype={element}></div>)\n        else if (element === 'CH') computerTileArr.push(<div className=\"computerHitTile\" onClick={props.logic} datatype={element}></div>)\n        else if (element.includes('C' && 'X')) computerTileArr.push(<div className=\"computerShipHit\" onClick={props.logic} datatype={element}></div>)\n    });\n\n    let playerTileArr = [];\n    props.playerBoard.forEach(element => {\n        if (Number.isInteger(element)) playerTileArr.push(<div className=\"playerTile\" onClick={props.logic} datatype={element}></div>)\n        else if (element.startsWith('P') && !element.includes('H')) playerTileArr.push(<div className=\"playerShipTile\" onClick={props.logic} datatype={element}></div>)\n        else if (element === 'PH') playerTileArr.push(<div className=\"playerHitTile\" onClick={props.logic} datatype={element}></div>)\n        else if (element.includes('P' && 'X')) playerTileArr.push(<div className=\"playerShipHit\" onClick={props.logic} datatype={element}></div>)\n    });\n\n    return(\n        <div className=\"display\">\n            <p className=\"computerTitle\">Player 1</p>\n            <div className=\"computerUI\">\n                {computerTileArr}\n            </div>\n            <p className=\"playerTitle\">Player 2</p>\n            <div className=\"playerUI\">\n                {playerTileArr}\n            </div>\n        </div>\n    )\n}\n\nexport default Interface;","/* eslint-disable no-undef */\nimport  {React, useState}  from 'react';\nimport PlayGame from './components/PlayGame'\nimport gameboardFactory from './modules/gameboard';\nimport Interface from './components/Interface'\nimport ship from './modules/ship';\n\nfunction App() {\n    let computerDestroyedArr = ['Destroyed Ships:']\n    let playerDestroyedArr = ['Destroyed Ships:']\n    const [computerDestroyedState, setComputerDestroyedState] = useState(computerDestroyedArr)\n    const [playerDestroyedState, setPlayerDestroyedState] = useState(playerDestroyedArr)\n    const [computerShips, setComputerShips] = useState(gameboardFactory().createShips());\n    const [playerShips, setPlayerShips] = useState(gameboardFactory().createShips());\n    const [playerBoard, setPlayerBoard] = useState([]);\n    const [computerBoard, setComputerBoard] = useState([]);\n\n    const logic = (input) => {\n        const location = (input.target.attributes['datatype'].value);\n        if (location.includes('C') || location.includes('P')) { \n            if (location !== 'CH' && 'PH') {\n                ship().hit(location, playerShips, computerShips, setPlayerShips, setComputerShips, computerBoard, setComputerBoard, playerBoard, setPlayerBoard, checkWin);\n            }\n         }\n        else {\n            let newLocation = parseInt(location, 10);\n            if (input.target.classList.contains('computerTile')) gameboardFactory().receiveAttack(newLocation, 'CH', computerBoard, setComputerBoard)\n            if (input.target.classList.contains('playerTile')) gameboardFactory().receiveAttack(newLocation, 'PH', playerBoard, setPlayerBoard)\n        }\n    }\n\n    const resetGame = () => {\n        window.location.reload()\n    }\n\n    const checkWin = () => {\n        const computerWinArr = [\n        (computerShips.patrolboat.Destroyed),\n        (computerShips.submarine.Destroyed),\n        (computerShips.destroyer.Destroyed),\n        (computerShips.battleship.Destroyed),\n        (computerShips.carrier.Destroyed),\n        ]\n\n        const playerWinArr = [\n        (playerShips.patrolboat.Destroyed),\n        (playerShips.submarine.Destroyed),\n        (playerShips.destroyer.Destroyed),\n        (playerShips.battleship.Destroyed),\n        (playerShips.carrier.Destroyed),\n        ]\n\n        if ((computerWinArr[0] === true) && (!playerDestroyedArr.includes(computerShips.patrolboat))) {playerDestroyedArr.push(<br></br>, <br></br>, 'Patrolboat') && setPlayerDestroyedState(playerDestroyedArr)}\n        if ((computerWinArr[1] === true) && (!playerDestroyedArr.includes(computerShips.submarine))) {playerDestroyedArr.push(<br></br>, <br></br>, 'Submarine') && setPlayerDestroyedState(playerDestroyedArr)}\n        if ((computerWinArr[2] === true) && (!playerDestroyedArr.includes(computerShips.destroyer))) {playerDestroyedArr.push(<br></br>, <br></br>, 'Destroyer') && setPlayerDestroyedState(playerDestroyedArr)}\n        if ((computerWinArr[3] === true) && (!playerDestroyedArr.includes(computerShips.battleship))) {playerDestroyedArr.push(<br></br>, <br></br>, 'Battleship') && setPlayerDestroyedState(playerDestroyedArr)}\n        if ((computerWinArr[4] === true) && (!playerDestroyedArr.includes(computerShips.carrier))) {playerDestroyedArr.push(<br></br>, <br></br>, 'Carrier') && setPlayerDestroyedState(playerDestroyedArr)}\n\n        if ((playerWinArr[0] === true) && (!computerDestroyedArr.includes(playerShips.patrolboat))) {computerDestroyedArr.push(<br></br>, <br></br>, 'Patrolboat') && setComputerDestroyedState(computerDestroyedArr)}\n        if ((playerWinArr[1] === true) && (!computerDestroyedArr.includes(playerShips.submarine))) {computerDestroyedArr.push(<br></br>, <br></br>,'Submarine') && setComputerDestroyedState(computerDestroyedArr)}\n        if ((playerWinArr[2] === true) && (!computerDestroyedArr.includes(playerShips.destroyer))) {computerDestroyedArr.push(<br></br>, <br></br>, 'Destroyer') && setComputerDestroyedState(computerDestroyedArr)}\n        if ((playerWinArr[3] === true) && (!computerDestroyedArr.includes(playerShips.battleship))) {computerDestroyedArr.push(<br></br>, <br></br>, 'Battleship') && setComputerDestroyedState(computerDestroyedArr)}\n        if ((playerWinArr[4] === true) && (!computerDestroyedArr.includes(playerShips.carrier))) {computerDestroyedArr.push(<br></br>, <br></br>, 'Carrier') && setComputerDestroyedState(computerDestroyedArr)}\n                \n        if (!computerWinArr.includes(false)) { \n            alert('Player 2 Wins!');\n            resetGame()\n        } else if (!playerWinArr.includes(false)) {\n            alert('Player 1 Wins!');\n            resetGame()\n        }\n    }\n    return(\n        <div className=\"mainDiv\">\n            <p className=\"title\">Battleships</p>\n            <button className=\"resetBtn\" onClick={resetGame}>Reset Game</button>\n            <PlayGame setComputerBoard={setComputerBoard} setPlayBoard={setPlayerBoard} playerShips={playerShips} computerShips={computerShips} computerBoard={computerBoard} playerBoard={playerBoard} setPlayerBoard={setPlayerBoard} setComputerShips={setComputerShips} setPlayerShips={setPlayerShips}/>\n            <Interface logic={logic} computerBoard={computerBoard} playerBoard={playerBoard} />\n            <div className=\"computerDestroyedList\">{computerDestroyedState}</div>\n            <div className=\"playerDestroyedList\">{playerDestroyedState}</div>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}